generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EvidenceType {
  ENTRANCE
  EXIT
  OBSERVATION
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password      String
  loginHash     String?   @unique
  createdAt     DateTime  @default(now())
  deactivatedAt DateTime?
  deletedAt     DateTime?
  companyId     String?
  role          Role      @default(EMPLOYEE)

  company  Company?   @relation(fields: [companyId], references: [id])
  cleaning Cleaning[]
  schedule Schedule[]
}

model Company {
  id   String @id @default(uuid())
  name String

  users User[]
  Place Place[]
}

model Place {
  id          String  @id @default(uuid())
  name        String
  description String?
  companyId   String

  company  Company    @relation(fields: [companyId], references: [id])
  Schedule Schedule[]
  Cleaning Cleaning[]
}

model Evidence {
  id          String       @id @default(uuid())
  cleaningId  String
  evidenceUrl String
  type        EvidenceType
  createdAt   DateTime     @default(now())

  cleaning Cleaning @relation(fields: [cleaningId], references: [id])
}

model Cleaning {
  id        String    @id @default(uuid())
  userId    String
  placeId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  evidences Evidence[]
  User      User       @relation(fields: [userId], references: [id])
  Place     Place      @relation(fields: [placeId], references: [id])
}

model Schedule {
  id            String    @id @default(uuid())
  placeId       String
  responsibleId String
  eventDate     DateTime
  repeatable    Boolean
  deactivatedAt DateTime?

  place       Place @relation(fields: [placeId], references: [id])
  responsible User  @relation(fields: [responsibleId], references: [id])
}
